    •  Return type is the stream you want to overload from (for example, std ::ostream) passed by reference, to
      allow chaining (Chaining: std::cout << a << b;). Example: std::ostream&
    •  lhs would be the same as the return type
    •  rhs is the type you want to allow overloading from (i.e. T), passed by const& instead of value for performance
      reason (rhs shouldn't be changed anyway). Example: const Vectors.
Example:
//Overload std::ostream operator<< to allow output from Vector's
std::ostream& operator<<(std::ostream& lhs, const Vector& rhs)
{
     lhs << "x: " << rhs.x << " y: " << rhs.y << " z: " << rhs.z << '\n';
     return lhs;
}
Vector v = { 1, 2, 3};
                                                   //Now you can do
                                                   std::cout << v;
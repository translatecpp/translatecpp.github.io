     tm_ret.tm_mon = month - 1;
     tm_ret.tm_year = year - 1900;
     return tm_ret;
}
int get_days_in_year(int year) {
     using namespace std;
     using namespace std::chrono;
     // We want results to be in days
     typedef duration<int, ratio_multiply<hours::period, ratio<24> >::type> days;
     // Create start time span
     std::tm tm_start = CreateTmStruct(year, 1, 1, 0, 0, 0);
     auto tms = system_clock::from_time_t(std::mktime(&tm_start));
     // Create end time span
         std::tm tm_end = CreateTmStruct(year + 1, 1, 1, 0, 0, 0);
     auto tme = system_clock::from_time_t(std::mktime(&tm_end));
     // Calculate time duration between those two dates
     auto diff_in_days = std::chrono::duration_cast<days>(tme - tms);
     return diff_in_days.count();
}
int main()
{
     for ( int year = 2000; year <= 2016; ++year )
         std::cout << "There are " << get_days_in_year(year) << " days in " << year << "\n";
}
Online compiler website behavior is usually quite restrictive as they allow anyone to run compilers and execute
arbitrary code on their server side, whereas ordinarily remote arbitrary code execution is considered as
vulnerability.
Online compilers may be useful for the following purposes:
     •  Run a small code snippet from a machine which lacks C++ compiler (smartphones, tablets, etc.).
     •  Ensure that code compiles successfully with different compilers and runs the same way regardless the
       compiler it was compiled with.
     •  Learn or teach basics of C++.
     •  Learn modern C++ features (C++14 and C++17 in near future) when up-to-date C++ compiler is not available
       on local machine.
     •  Spot a bug in your compiler by comparison with a large set of other compilers. Check if a compiler bug was
       fixed in future versions, which are unavailable on your machine.
     •  Solve online judge problems.
What online compilers should not be used for:
     •  Develop full-featured (even small) applications using C++. Usually online compilers do not allow to link with
       third-party libraries or download build artifacts.
     •  Perform intensive computations. Sever-side computing resources are limited, so any user-provided program
       will be killed after a few seconds of execution. The permitted execution time is usually enough for testing and
       learning.
     •  Attack compiler server itself or any third-party hosts on the net.
Examples:
      Disclaimer: documentation author(s) are not affiliated with any resources listed below. Websites are listed
      alphabetically. •
     • http://codepad.org/ Online compiler with code sharing. Editing code after compiling with a source code
       warning or error does not work so well.
     • http://coliru.stacked-crooked.com/ Online compiler for which you specify the command line. Provides both
       GCC and Clang compilers for use.
     • http://cpp.sh/ - Online compiler with C++14 support. Does not allow you to edit compiler command line, but
       some options are available via GUI controls.
     • https://gcc.godbolt.org/ - Provides a wide list of compiler versions, architectures, and disassembly output.
       Very useful when you need to inspect what your code compiles into by different compilers. GCC, Clang, MSVC
       (CL), Intel compiler (icc), ELLCC, and Zapcc are present, with one or more of these compilers available for the
       ARM, ARMv8 (as ARM64), Atmel AVR, MIPS, MIPS64, MSP430, PowerPC, x86, and x64 architecutres. Compiler
       command line arguments may be edited.
     • https://ideone.com/ - Widely used on the Net to illustrate code snippet behavior. Provides both GCC and
       Clang for use, but doesn't allow you to edit the compiler command line.
     • http://melpon.org/wandbox - Supports numerous Clang and GNU/GCC compiler versions.
     • http://onlinegdb.com/ - An extremely minimalistic IDE that includes an editor, a compiler (gcc), and a
       debugger (gdb).
     • http://rextester.com/ - Provides Clang, GCC, and Visual Studio compilers for both C and C++ (along with
       compilers for other languages), with the Boost library available for use.
     • http://tutorialspoint.com/compile cpp11 online.php - Full-featured UNIX shell with GCC, and a user-friendly
       project explorer.
     • http://webcompiler.cloudapp.net/ - Online Visual Studio 2015 compiler, provided by Microsoft as part of
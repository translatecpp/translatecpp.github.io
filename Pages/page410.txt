Chapter 76: Data Structures in C++
Section 76.1: Linked List implementation in C++
Creating a List Node
class listNode
{
    public:
    int data;
    listNode *next;
    listNode(int val):data(val) ,next(NULL) {}
};
Creating List class
class List
{
     public:
     listNode *head;
     List():head(NULL){}
     void insertAtBegin(int val);
     void insertAtEnd(int val);
     void insertAtPos(int val);
     void remove(int val);
     void print();
     ~List();
};
Insert a new node at the beginning of the list
void List::insertAtBegin(int val)//inserting at front of list
{
     listNode *newnode = new listNode(val);
     newnode->next=this->head;
     this->head=newnode;
}
Insert a new node at the end of the list
void List::insertAtEnd(int val) //inserting at end of list
{
     if(head==NULL)
     {
          insertAtBegin(val);
          return;
     }
     listNode *newnode = new listNode(val);
     listNode *ptr=this->head;
     while(ptr->next!=NULL)
     {
          ptr=ptr->next;
     }
     ptr->next=newnode;
}
Insert at a particular position in list
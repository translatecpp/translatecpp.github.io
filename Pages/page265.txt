Section 49.2: Element access
1.at(pos)
Returns a reference to the element at position pos with bounds checking. If pos is not within the range of the
container, an exception of type std ::out_of_range is thrown.
The complexity is constant O(1).
#include <array>
int main()
{
     std::array<int, 3> arr;
// write values
arr .at(0) = 2;                   
arr .at(l) = 4;                   
arr .at(2) = 6;                   
//  read values                   
int a = arr. at(0); // a is now 2 
int b = arr  at(1); // b is now 4 
int c = arr. at(2); // c is now 6 
      return 0;
}
2)  operator[pos]
Returns a reference to the element at position pos without bounds checking. If pos is not within the range of the
container, a runtime segmentation violation error can occur. This method provides element access equivalent to
classic arrays and thereof more efficient than at(pos).
The complexity is constant O(1).
#include <array>
int main()
{
std ::array<int,  3> ar r;       
//  write values                 
arr [0] = 2;                     
arr [1] = 4;                     
arr [2] = 6;                     
//  read  values                 
int a =   arr[0]; // a  is now 2 
int b =   arr[1]; // b  is now 4 
int c =   arr[2]; // c  is now 6 
     return 0;
}
3)std::get<pos>
This non-member function returns a reference to the element at compile-time constant position pos without